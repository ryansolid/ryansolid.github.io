!function(){"use strict";function n(n,e){const l=new t(n);let o;if(e){let t=-1;o=o=>{if(!e(n,o)){const e=a.time;if(e===t)throw new Error(`Conflicting value update: ${o} is not the same as ${n}`);t=e,n=o,l.next(o)}}}else o=l.next.bind(l);return[l.current.bind(l),o]}function e(n,e){v(n,e,!1,!1)}class t{constructor(n){this.value=n,this.pending=s,this.log=null}current(){return null!==f&&function(n){null===n.log&&(n.log={node1:null,node1slot:0,nodes:null,nodeslots:null});y(n.log)}(this),this.value}next(n){if(null!==d)if(this.pending!==s){if(n!==this.pending)throw new Error("conflicting changes: "+n+" !== "+this.pending)}else this.pending=n,a.changes.add(this);else null!==this.log?(this.pending=n,a.changes.add(this),function(){var n=h;a.updates.reset(),a.time++;try{x(a)}finally{d=f=null,h=n}}()):this.value=n;return n}}class l{constructor(){this.fn=null,this.age=-1,this.state=u,this.source1=null,this.source1slot=0,this.sources=null,this.sourceslots=null,this.log=null,this.owner=h,this.owned=null,this.cleanups=null}current(){if(null!==f){if(this.age===a.time){if(this.state===i)throw new Error("circular dependency");A(this)}!function(n){null===n.log&&(n.log={node1:null,node1slot:0,nodes:null,nodeslots:null});y(n.log)}(this)}return this.value}}class o{constructor(){this.items=[],this.count=0}reset(){this.count=0}add(n){this.items[this.count++]=n}run(n){for(var e=this.items,t=0;t<this.count;t++)n(e[t]),e[t]=null;this.count=0}}var s={},u=0,r=1,i=2,c=new l,a={time:0,changes:new o,updates:new o,disposes:new o},d=null,f=null,h=null,p=null,g={node:null,value:void 0};function v(n,e,t,l){var o=w(),s=h,u=f,r=null===d;h=o,f=l?null:o,e=r?function(n,e){d=a,a.changes.reset(),a.updates.reset();try{return n(e)}finally{h=f=d=null}}(n,e):n(e),h=s,f=u;var i=m(o,n,e,t);return r&&function(n,e){if(a.changes.count>0||a.updates.count>0){a.time++;try{x(a)}finally{d=null,h=n,f=e}}}(s,u),g.node=i?null:o,g.value=e,g}function w(){var n=p;return null===n?n=new l:p=null,n}function m(n,e,t,l){var o,s=l||null===h||h===c?null:h,u=null===n.source1&&(null===n.owned&&null===n.cleanups||null!==s);if(u){if(p=n,null!==s){if(null!==n.owned){if(null===s.owned)s.owned=n.owned;else for(o=0;o<n.owned.length;o++)s.owned.push(n.owned[o]);n.owned=null}if(null!==n.cleanups){if(null===s.cleanups)s.cleanups=n.cleanups;else for(o=0;o<n.cleanups.length;o++)s.cleanups.push(n.cleanups[o]);n.cleanups=null}}}else n.fn=e,n.value=t,n.age=a.time,null!==s&&(null===s.owned?s.owned=[n]:s.owned.push(n));return u}function y(n){var e,t=f,l=null===t.source1?-1:null===t.sources?0:t.sources.length;null===n.node1?(n.node1=t,n.node1slot=l,e=-1):null===n.nodes?(n.nodes=[t],n.nodeslots=[l],e=0):(e=n.nodes.length,n.nodes.push(t),n.nodeslots.push(l)),null===t.source1?(t.source1=n,t.source1slot=e):null===t.sources?(t.sources=[n],t.sourceslots=[e]):(t.sources.push(n),t.sourceslots.push(e))}function x(n){var e=d,t=0;for(d=n,n.disposes.reset();0!==n.changes.count||0!==n.updates.count||0!==n.disposes.count;)if(t>0&&n.time++,n.changes.run(b),n.updates.run(A),n.disposes.run(S),t++>1e5)throw new Error("Runaway clock detected");d=e}function b(n){n.value=n.pending,n.pending=s,n.log&&C(n.log)}function C(n){var e=n.node1,t=n.nodes;if(null!==e&&N(e),null!==t)for(var l=0,o=t.length;l<o;l++)N(t[l])}function N(n){var e=a.time;n.age<e&&(n.age=e,n.state=r,a.updates.add(n),null!==n.owned&&function n(e){for(var t=0;t<e.length;t++){var l=e[t];l.age=a.time,l.state=u,null!==l.owned&&n(l.owned)}}(n.owned),null!==n.log&&C(n.log))}function A(n){if(n.state===r){var e=h,t=f;h=f=n,n.state=i,T(n,!1),n.value=n.fn(n.value),n.state=u,h=e,f=t}}function T(n,e){var t,l,o=n.source1,s=n.sources,u=n.sourceslots,r=n.cleanups,i=n.owned;if(null!==r){for(t=0;t<r.length;t++)r[t](e);n.cleanups=null}if(null!==i){for(t=0;t<i.length;t++)S(i[t]);n.owned=null}if(null!==o&&(E(o,n.source1slot),n.source1=null),null!==s)for(t=0,l=s.length;t<l;t++)E(s.pop(),u.pop())}function E(n,e){var t,l,o=n.nodes,s=n.nodeslots;-1===e?n.node1=null:(t=o.pop(),l=s.pop(),e!==o.length&&(o[e]=t,s[e]=l,-1===l?t.source1slot=e:t.sourceslots[l]=e))}function S(n){n.fn=null,n.log=null,n.owner=null,T(n,!0)}const k="__rGroup",I="previousSibling";let H=0;function M(n,e,t,l){if(Array.isArray(e)){if(!e.length)return;let o=(e=function n(e,t){for(let l=0,o=t.length;l<o;l++){let o=t[l];o instanceof Node?11===o.nodeType?n(e,o.childNodes):e.push(o):null==o||!0===o||!1===o||(Array.isArray(o)?n(e,o):"string"==typeof o?e.push(document.createTextNode(o)):e.push(document.createTextNode(o.toString())))}return e}([],e))[0];1!==e.length&&(o[k]=e[e.length-1][k]=l);for(let l=0;l<e.length;l++)t?n.insertBefore(e[l],t):n.appendChild(e[l]);return o}let o,s=typeof e;return"string"===s||"number"===s?e=document.createTextNode(e):11===e.nodeType&&(o=e.firstChild)&&o!==e.lastChild&&(o[k]=e.lastChild[k]=l),t?n.insertBefore(e,t):n.appendChild(e),o||e}function q(n,e,t,l){return void 0===t?n.textContent="":(Array.isArray(e)?l=e[0]:null!=e&&""!=e&&void 0===l&&(l=function(n,e,t){const l=n[k];if(l)for(n=n[e];n&&n[k]!==l;)n=n[e];return t?n:n[e]}(t.previousSibling,I,!0)),l&&function(n,e,t){let l;for(;e!==t;)l=e.nextSibling,n.removeChild(e),e=l}(n,l,t),"")}function B(n,t,l,o){if(t===l)return l;n=o&&o.parentNode||n;const s=typeof t;if("string"===s||"number"===s)if("number"===s&&(t=t.toString()),void 0!==o){const e=o&&o.previousSibling||n.lastChild;if(""===t)q(n,l,o);else if(""!==l&&"string"==typeof l)e.data=t;else{const s=document.createTextNode(t);""!==l&&null!=l?n.replaceChild(s,e):n.insertBefore(s,o)}l=t}else l=""!==l&&"string"==typeof l?n.firstChild.data=t:n.textContent=t;else if(null==t||"boolean"===s)l=q(n,l,o);else if("function"===s)e(function(){l=B(n,t(),l,o)});else{if(!(t instanceof Node||Array.isArray(t)))throw new Error("content must be Node, stringable, or array of same");q(n,l,o),M(n,t,o,++H),l=t}return l}function F(n,t,l,o){if("function"!=typeof t)return B(n,t,l,o);e((e=l)=>B(n,t(),e,o))}const L=document.createElement("template"),j=document.createElement("template"),D=document.createElement("template");L.innerHTML="<div class='container'></div>",j.innerHTML="\x3c!----\x3e\x3c!----\x3e\x3c!----\x3e",D.innerHTML="<div class='dot'></div>";const O=()=>{const[t,l]=n(0),[o,s]=n(0),u=function(n,e){null===h&&console.warn("computations created without a root or parent will never be disposed");var{node:t,value:l}=v(n,e,!1,!1);return null===t?function(){return l}:function(){return t.current()}}(()=>{const n=t()/1e3%10;return 1+(n>5?10-n:n)/10}),r=Date.now(),i=setInterval(()=>s(o()%10+1),1e3);let c;const a=()=>{l(Date.now()-r),c=requestAnimationFrame(a)};return c=requestAnimationFrame(a),function(n){null===h?console.warn("cleanups created without a root or parent will never be run"):null===h.cleanups?h.cleanups=[n]:h.cleanups.push(n)}(()=>{clearInterval(i),cancelAnimationFrame(c)}),function(){const n=L.content.firstChild.cloneNode(!0);return e(()=>Object.assign(n.style,{transform:"scaleX("+u()/2.1+") scaleY(0.7) translateZ(0.1px)"})),F(n,R({x:0,y:0,s:1e3,seconds:o})),n}()},R=({x:t,y:l,s:o,seconds:s})=>o<=25?$({x:t-12.5,y:l-12.5,s:25,text:s}):(125===(o/=2)&&(s=(t=>{let l,o;const[s,u]=n(t()),r={current:null},i=()=>{cancelIdleCallback(l),clearTimeout(o),o=null,u(r.current)};return e(()=>{r.current=t(),cancelIdleCallback(l),o||(o=setTimeout(i,100*~~(4*Math.random()+1))),l=requestIdleCallback(i)}),s})(s)),function(){const n=j.content.cloneNode(!0),e=n.firstChild,u=e.nextSibling,r=u.nextSibling;return F(n,R({x:t,y:l-o/2,s:o,seconds:s}),void 0,e),F(n,R({x:t-o,y:l+o/2,s:o,seconds:s}),void 0,u),F(n,R({x:t+o,y:l+o/2,s:o,seconds:s}),void 0,r),n}()),$=({x:t,y:l,s:o,text:s})=>{const[u,r]=n(!1),i=()=>r(!0),c=()=>r(!1);return function(){const n=D.content.firstChild.cloneNode(!0);return n.onmouseleave=c,n.onmouseenter=i,e(()=>Object.assign(n.style,{width:o+"px",height:o+"px",left:t+"px",top:l+"px",borderRadius:o/2+"px",lineHeight:o+"px",background:u()?"#ff0":"#61dafb"})),F(n,()=>u()?"**"+s()+"**":s()),n}()};!function(n,e){var t,l=h,o=0===n.length?null:function(){null===s||(null!==d?a.disposes.add(s):S(s))},s=null===o?c:w();s.owner=e||h,h=s;try{t=null===o?n():n(o)}finally{h=l}null!==o&&m(s,null,void 0,!0)&&(s=null)}(()=>document.body.appendChild(O()))}();
